{"version":3,"file":"main.de54e13e14bd9a9ba2e6.js","mappings":"mBAAI,MAuCA,EAvCgC,CAChC,CACIA,OAAQ,KACRC,KAAM,QACNC,OAAQ,aACRC,QAAQ,+BAEZ,CACIH,OAAQ,KACRC,KAAM,SACNC,OAAQ,aACRC,QAAQ,+BAEZ,CACIH,OAAQ,KACRC,KAAM,QACNC,OAAQ,aACRC,QAAQ,+BAEZ,CACIH,OAAQ,KACRC,KAAM,UACNC,OAAQ,aACRC,QAAQ,+BAEZ,CACIH,OAAQ,KACRC,KAAM,YACNC,OAAQ,6BACRC,QAAQ,iGAEZ,CACIH,OAAQ,KACRC,KAAM,gBACNC,OAAQ,aACRC,QAAQ,gCC9BVC,EAAUC,SAASC,cAAc,YACjCC,EAAMF,SAASC,cAAc,QAC7BE,EAAcH,SAASC,cAAc,iBACrCG,EAAQJ,SAASC,cAAc,UAC/BI,EAAaL,SAASC,cAAc,uBACpCK,EAAeN,SAASC,cAAc,yBACtCM,EAAWP,SAASC,cAAc,qBACxC,IAAIO,EACAC,EACAC,EAEJC,OAAOC,iBAAiB,oBAAoB,KAC1CV,EAAIW,UAAW,CAAI,IAGrB,MAAMC,EAAY,KACZV,EAAMW,SAASC,aACjBX,EAAWY,YAAc,0BAChBb,EAAMW,SAASG,aACxBb,EAAWY,YAAc,+CAChBb,EAAMW,SAASI,WACxBd,EAAWY,YAAc,0BAA0Bb,EAAMgB,qCAAqChB,EAAMiB,MAAMC,UAGxGpB,EAAIa,SAASC,eACfT,EAASU,YAAc,6BAGrBlB,EAAQgB,SAASC,eACnBV,EAAaW,YAAc,6BAG7BZ,EAAWkB,UAAY,eACvBjB,EAAaiB,UAAY,eACzBhB,EAASgB,UAAY,cAAc,EAGrCnB,EAAMQ,iBAAiB,SAAS,KAC1BR,EAAMW,SAASS,MACjBnB,EAAWY,YAAc,GAEzBH,GACF,IAGFf,EAAQa,iBAAiB,UAAU,KACjCH,EAAY,EAAwBgB,MACjCC,GAAQA,EAAI/B,SAAWI,EAAQsB,QAChCxB,OAEFa,EAAe,EAAwBe,MACpCC,GAAQA,EAAI/B,SAAWI,EAAQsB,QAChCvB,QAEoB,KAAlBC,EAAQsB,MACVnB,EAAIW,UAAW,GAEfP,EAAaW,YAAc,GAC3Bf,EAAIW,UAAW,EACfN,EAASU,YAAc,4BACzB,IAGFf,EAAIU,iBAAiB,SAAS,KAC5BJ,EAAW,IAAImB,OAAOlB,GAClBD,EAASoB,KAAK,GAAG1B,EAAImB,UACvBQ,QAAQC,IAAItB,EAASoB,KAAK,GAAG1B,EAAImB,UACjCnB,EAAI6B,kBAAkB,IACtBxB,EAASU,YAAc,KAEvBf,EAAI6B,kBAAkBvB,GACtBD,EAASU,YAAcP,EACvBI,IACF,IAGFX,EAAYS,iBAAiB,UAAWoB,IACtCA,EAAEC,iBACG7B,EAAMW,SAASS,QAClBV,IACAkB,EAAEC,iBACJ,G","sources":["webpack://form-validation-top/./src/Models/countriesAddressPostal.js","webpack://form-validation-top/./src/index.js"],"sourcesContent":["    const COUNTRY_ADDRESS_POSTALS = [\n    {\n        abbrev: 'es',\n        name: 'Spain',\n        postal: '^[0-9]{5}$',\n        message:'Needs 5 numbers from 0 to 9'\n    },\n    {\n        abbrev: 'fr',\n        name: 'France',\n        postal: '^[0-9]{5}$',\n        message:'Needs 5 numbers from 0 to 9'\n    },\n    {\n        abbrev: 'it',\n        name: 'Italy',\n        postal: '^[0-9]{5}$',\n        message:'Needs 5 numbers from 0 to 9'\n    },\n    {\n        abbrev: 'at',\n        name: 'Austria',\n        postal: '^[0-9]{4}$',\n        message:'Needs 4 numbers from 0 to 9'\n    },\n    {\n        abbrev: 'ar',\n        name: 'Argentina',\n        postal: '^[A-Z]{1}[0-9]{4}[A-Z]{3}$',\n        message:'You need 1 capital letter followed by 4 numbers from 0 to 9 followed by three capital letters'\n    },\n    {\n        abbrev: 'fo',\n        name: 'Faroe Islands',\n        postal: '^[0-9]{3}$',\n        message:'Needs 3 numbers from 0 to 9'\n    },\n    ]\n\n    export default COUNTRY_ADDRESS_POSTALS;\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'normalize.css';\nimport './styles/main.css';\nimport COUNTRY_ADDRESS_POSTALS from './Models/countriesAddressPostal';\n\nconst country = document.querySelector('#country');\nconst zip = document.querySelector('#zip');\nconst contactForm = document.querySelector('#contact-form');\nconst email = document.querySelector('#email');\nconst emailError = document.querySelector('#email + span.error');\nconst countryError = document.querySelector('#country + span.error');\nconst zipError = document.querySelector('#zip + span.error');\nlet myRegexp;\nlet myZipCode;\nlet myZipMessage;\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  zip.disabled = true;\n});\n\nconst showError = () => {\n  if (email.validity.valueMissing) {\n    emailError.textContent = 'You must enter an email';\n  } else if (email.validity.typeMismatch) {\n    emailError.textContent = 'Email format please: E.g. username@email.com';\n  } else if (email.validity.tooShort) {\n    emailError.textContent = `Email must be at least ${email.minLength} characters. You entered ${email.value.length}`;\n  }\n\n  if (zip.validity.valueMissing) {\n    zipError.textContent = 'You must enter a ZIP Code';\n  }\n\n  if (country.validity.valueMissing) {\n    countryError.textContent = 'You must select a country';\n  }\n\n  emailError.className = 'error active';\n  countryError.className = 'error active';\n  zipError.className = 'error active';\n};\n\nemail.addEventListener('input', () => {\n  if (email.validity.valid) {\n    emailError.textContent = '';\n  } else {\n    showError();\n  }\n});\n\ncountry.addEventListener('change', () => {\n  myZipCode = COUNTRY_ADDRESS_POSTALS.find(\n    (obj) => obj.abbrev === country.value\n  ).postal;\n\n  myZipMessage = COUNTRY_ADDRESS_POSTALS.find(\n    (obj) => obj.abbrev === country.value\n  ).message;\n\n  if (country.value === '') {\n    zip.disabled = true;\n  } else {\n    countryError.textContent = '';\n    zip.disabled = false;\n    zipError.textContent = 'You must enter a ZIP Code';\n  }\n});\n\nzip.addEventListener('input', () => {\n  myRegexp = new RegExp(myZipCode);\n  if (myRegexp.test(`${zip.value}`)) {\n    console.log(myRegexp.test(`${zip.value}`));\n    zip.setCustomValidity('');\n    zipError.textContent = '';\n  } else {\n    zip.setCustomValidity(myRegexp);\n    zipError.textContent = myZipMessage;\n    showError();\n  }\n});\n\ncontactForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n  if (!email.validity.valid) {\n    showError();\n    e.preventDefault();\n  }\n});\n"],"names":["abbrev","name","postal","message","country","document","querySelector","zip","contactForm","email","emailError","countryError","zipError","myRegexp","myZipCode","myZipMessage","window","addEventListener","disabled","showError","validity","valueMissing","textContent","typeMismatch","tooShort","minLength","value","length","className","valid","find","obj","RegExp","test","console","log","setCustomValidity","e","preventDefault"],"sourceRoot":""}